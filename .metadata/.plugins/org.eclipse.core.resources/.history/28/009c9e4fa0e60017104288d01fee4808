package com.proton.email.bot.core.pageobjects;

import java.util.ArrayList;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;

import com.proton.email.bot.core.BasePage;

public class FormPage extends FormPage_1 {

	
	
	@FindBy(css="div.pm_panel.wide.signupUserForm-container")
	private WebElement formConteiner;
	
	
	public FormPage(WebDriver driver) {
		super(driver);
		identifyElements();
	}
	
	public boolean attemptToFillFormDetails(String aliasMail, String pwd, String email) {
		try {
			for(int n = 0; n < listOfElemnets.size(); n++) {
				switch(n) {
				case 0:
					fillText(listOfElemnets.get(n), aliasMail);
					break;
				case 1:
					fillText(listOfElemnets.get(n), pwd);
					break;
				case 2:
					fillText(listOfElemnets.get(n), pwd);
					break;
				case 3:
					fillText(listOfElemnets.get(n), email);
					break;
				case 4:
					click(listOfElemnets.get(n));
					break;
				}
			}
			return true;
		}
		catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		
	}
	
	private void identifyElements() {
		
		alias = waitUntilElementLocatedByCSS("div.usernameWrap#username");
		pwd = waitUntilElementLocatedByCSS("input#password");
		pwdc = waitUntilElementLocatedByCSS("input#passwordc");
		recoveryEmail = waitUntilElementLocatedByCSS("input#notificationEmail");
		createAccountBtn = waitUntilElementLocatedByCSS("button.signUpProcess-btn-create");
		
		listOfElemnets = new ArrayList<WebElement>();
		
		listOfElemnets.add(alias);
		listOfElemnets.add(pwd);
		listOfElemnets.add(pwdc);
		listOfElemnets.add(recoveryEmail);
		listOfElemnets.add(createAccountBtn);
	}
	
	
	
	
}
